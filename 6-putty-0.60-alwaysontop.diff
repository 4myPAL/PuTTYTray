=== windows/window.c
==================================================================
--- windows/window.c	(revision 7489)
+++ windows/window.c	(local)
@@ -49,6 +49,11 @@
 #define IDM_PASTE     0x0190
 #define IDM_SPECIALSEP 0x0200
 
+/*
+ * HACK: PuttyTray / Always on top
+ */
+#define IDM_VISIBLE 0x0240
+
 #define IDM_SPECIAL_MIN 0x0400
 #define IDM_SPECIAL_MAX 0x0800
 
@@ -198,6 +203,11 @@
 
 static UINT wm_mousewheel = WM_MOUSEWHEEL;
 
+/*
+ * HACK: PuttyTray / Always on top
+ */ 
+void MakeWindowOnTop(HWND hwnd);
+
 /* Dummy routine, only required in plink. */
 void ldisc_update(void *frontend, int echo, int edit)
 {
@@ -779,6 +789,16 @@
 	    AppendMenu(m, MF_SEPARATOR, 0, 0);
 	    AppendMenu(m, (cfg.resize_action == RESIZE_DISABLED) ?
 		       MF_GRAYED : MF_ENABLED, IDM_FULLSCREEN, "&Full Screen");
+
+		/*
+		 * HACK: PuttyTray / Always on top
+		 */
+		if (cfg.alwaysontop) {
+			AppendMenu(m, MF_ENABLED | MF_CHECKED, IDM_VISIBLE, "Alwa&ys on top");
+		} else {
+			AppendMenu(m, MF_ENABLED | MF_UNCHECKED, IDM_VISIBLE, "Alwa&ys on top");
+		}
+
 	    AppendMenu(m, MF_SEPARATOR, 0, 0);
 	    if (has_help())
 		AppendMenu(m, MF_ENABLED, IDM_HELP, "&Help");
@@ -2175,17 +2195,24 @@
 			GetWindowLongPtr(hwnd, GWL_EXSTYLE);
 
 		    nexflag = exflag;
-		    if (cfg.alwaysontop != prev_cfg.alwaysontop) {
+		    //if (cfg.alwaysontop != prev_cfg.alwaysontop) { //HACK: PuttyTray / Always on top:
 			if (cfg.alwaysontop) {
 			    nexflag |= WS_EX_TOPMOST;
 			    SetWindowPos(hwnd, HWND_TOPMOST, 0, 0, 0, 0,
 					 SWP_NOMOVE | SWP_NOSIZE);
+
+			    //HACK: PuttyTray / Always on top:
+			    CheckMenuItem(GetSystemMenu(hwnd, FALSE), IDM_VISIBLE, MF_CHECKED);
 			} else {
 			    nexflag &= ~(WS_EX_TOPMOST);
 			    SetWindowPos(hwnd, HWND_NOTOPMOST, 0, 0, 0, 0,
 					 SWP_NOMOVE | SWP_NOSIZE);
+
+			    //HACK: PuttyTray / Always on top:
+			    CheckMenuItem(GetSystemMenu(hwnd, FALSE), IDM_VISIBLE, MF_UNCHECKED);
 			}
-		    }
+		    //}
+
 		    if (cfg.sunken_edge)
 			nexflag |= WS_EX_CLIENTEDGE;
 		    else
@@ -2275,6 +2302,14 @@
 	  case IDM_HELP:
 	    launch_help(hwnd, NULL);
 	    break;
+
+	  /*
+	   * HACK: PuttyTray / Always on top
+	   */
+	  case IDM_VISIBLE: 
+	  	MakeWindowOnTop(hwnd);
+		break;
+
 	  case SC_MOUSEMENU:
 	    /*
 	     * We get this if the System menu has been activated
@@ -5422,3 +5457,22 @@
     c->len = len;
     PostMessage(hwnd, WM_AGENT_CALLBACK, 0, (LPARAM)c);
 }
+
+/*
+ * HACK: PuttyTray / Always on top
+ * Function to switch the window positioning to and from 'always on top'
+ */ 
+void MakeWindowOnTop(HWND hwnd) {
+	HMENU m;
+	if ((m = GetSystemMenu(hwnd, FALSE)) != NULL) {
+		DWORD fdwMenu = GetMenuState(m, (UINT)IDM_VISIBLE, MF_BYCOMMAND); 
+		if (!(fdwMenu & MF_CHECKED)) {
+			CheckMenuItem(m, (UINT)IDM_VISIBLE, MF_BYCOMMAND|MF_CHECKED);
+			SetWindowPos(hwnd, (HWND)-1, 0, 0, 0, 0, SWP_NOMOVE |SWP_NOSIZE);
+		}
+		else {
+			CheckMenuItem(m, (UINT)IDM_VISIBLE, MF_BYCOMMAND|MF_UNCHECKED);
+			SetWindowPos(hwnd, (HWND)-2, 0, 0, 0, 0, SWP_NOMOVE |SWP_NOSIZE);
+		}
+	}
+}
